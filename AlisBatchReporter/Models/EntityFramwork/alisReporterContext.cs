using System;
using System.ComponentModel;
using System.Data.Linq.Mapping;

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlisBatchReporter.Models.EntityFramwork
{
    [Database(Name="C:\\Users\\Roni.axelrad\\AppData\\Local\\Temp\\alisReporter.sdf")]
	public partial class alisReporterContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSaved_credentials(Saved_credentials instance);
    partial void UpdateSaved_credentials(Saved_credentials instance);
    partial void DeleteSaved_credentials(Saved_credentials instance);
    #endregion
		
		public alisReporterContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public alisReporterContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public alisReporterContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public alisReporterContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Saved_credentials> Saved_credentials
		{
			get
			{
				return this.GetTable<Saved_credentials>();
			}
		}
	}
	
	[Table(Name="saved_credentials")]
	public partial class Saved_credentials : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private string _HOST;
		
		private string _DB;
		
		private string _NAME;
		
		private string _CONN_STRING;
		
		private string _CHOSE_LAST;
		
		private string _SAVED;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnHOSTChanging(string value);
    partial void OnHOSTChanged();
    partial void OnDBChanging(string value);
    partial void OnDBChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnCONN_STRINGChanging(string value);
    partial void OnCONN_STRINGChanged();
    partial void OnCHOSE_LASTChanging(string value);
    partial void OnCHOSE_LASTChanged();
    partial void OnSAVEDChanging(string value);
    partial void OnSAVEDChanged();
    #endregion
		
		public Saved_credentials()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_USERNAME", DbType="NVarChar(100)")]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[Column(Storage="_PASSWORD", DbType="NVarChar(1000)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[Column(Storage="_HOST", DbType="NVarChar(100)")]
		public string HOST
		{
			get
			{
				return this._HOST;
			}
			set
			{
				if ((this._HOST != value))
				{
					this.OnHOSTChanging(value);
					this.SendPropertyChanging();
					this._HOST = value;
					this.SendPropertyChanged("HOST");
					this.OnHOSTChanged();
				}
			}
		}
		
		[Column(Storage="_DB", DbType="NVarChar(100)")]
		public string DB
		{
			get
			{
				return this._DB;
			}
			set
			{
				if ((this._DB != value))
				{
					this.OnDBChanging(value);
					this.SendPropertyChanging();
					this._DB = value;
					this.SendPropertyChanged("DB");
					this.OnDBChanged();
				}
			}
		}
		
		[Column(Storage="_NAME", DbType="NVarChar(100)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[Column(Storage="_CONN_STRING", DbType="NVarChar(1000)")]
		public string CONN_STRING
		{
			get
			{
				return this._CONN_STRING;
			}
			set
			{
				if ((this._CONN_STRING != value))
				{
					this.OnCONN_STRINGChanging(value);
					this.SendPropertyChanging();
					this._CONN_STRING = value;
					this.SendPropertyChanged("CONN_STRING");
					this.OnCONN_STRINGChanged();
				}
			}
		}
		
		[Column(Storage="_CHOSE_LAST", DbType="NVarChar(10)")]
		public string CHOSE_LAST
		{
			get
			{
				return this._CHOSE_LAST;
			}
			set
			{
				if ((this._CHOSE_LAST != value))
				{
					this.OnCHOSE_LASTChanging(value);
					this.SendPropertyChanging();
					this._CHOSE_LAST = value;
					this.SendPropertyChanged("CHOSE_LAST");
					this.OnCHOSE_LASTChanged();
				}
			}
		}
		
		[Column(Storage="_SAVED", DbType="NVarChar(10)")]
		public string SAVED
		{
			get
			{
				return this._SAVED;
			}
			set
			{
				if ((this._SAVED != value))
				{
					this.OnSAVEDChanging(value);
					this.SendPropertyChanging();
					this._SAVED = value;
					this.SendPropertyChanged("SAVED");
					this.OnSAVEDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
